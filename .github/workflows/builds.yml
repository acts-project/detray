name: Builds

on:
  push:
  pull_request:
    branches:
      - main
      - 'release/**'

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: sudo apt-get install libeigen3-dev

    - name: Initialize Submodules
      run: cd $GITHUB_WORKSPACE; git submodule update --init

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DDETRAY_EIGEN_PLUGIN=On -DCMAKE_BUILD_TYPE=Release

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config Release

    - name: Unit Tests
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C Release

    - name: Run Benchmarks
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: $GITHUB_WORKSPACE/tests/scripts/run_benchmarks.sh

    #- name: Upload Benchmark Results
    #  run: git push 'https://asalzburger:${{ secrets.PERSONAL_GITHUB_TOKEN }}@github.com/asalzburger/detray.git' gh-pages:gh-pages

  ubuntu_float:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: sudo apt-get install libeigen3-dev

    - name: Initialize Submodules
      run: cd $GITHUB_WORKSPACE; git submodule update --init

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -DDETRAY_CUSTOM_SCALARTYPE=float

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config Release

    - name: Unit Tests
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C Release

    - name: Run Benchmarks
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: $GITHUB_WORKSPACE/tests/scripts/run_benchmarks.sh

  ubuntu_debug:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: sudo apt-get install libeigen3-dev

    - name: Initialize Submodules
      run: cd $GITHUB_WORKSPACE; git submodule update --init

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Debug 

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config Debug

    - name: Unit Tests
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C Debug

  ubuntu_cuda_debug:
    runs-on: ubuntu-latest
    container: ghcr.io/acts-project/ubuntu2004_cuda:v16.1
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Dependencies
      run: apt-get install libeigen3-dev

    - name: Configure CMake
      run: >
        cmake -B build -S . \
          -DCMAKE_BUILD_TYPE=Debug \
          -DDETRAY_EIGEN_PLUGIN=On \
          -DCMAKE_CUDA_COMPILER=$(which nvcc) \
          -DDETRAY_BUILD_CUDA=On

    - name: Build
      run: cmake --build build -- -j$(nproc)

    #- name: Unit Tests
    #  run: CTEST_PARALLEL_LEVEL=$(nproc) cmake --build build -- test

  macos:
    runs-on: macos-10.15

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: brew install cmake eigen ninja

    - name: Initialize Submodules
      run: cd $GITHUB_WORKSPACE; git submodule update --init

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -DDETRAY_BENCHMARKS=Off

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config Release

    - name: Unit Tests
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C Release
